services:
  postgres:
    image: postgres:16-alpine
    container_name: social_media_backend_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - social_media_network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 30s
      timeout: 10s
      retries: 5

  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: social_media_backend_only
    restart: unless-stopped
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?schema=public
      JWT_SECRET: ${JWT_SECRET}
      NODE_ENV: ${NODE_ENV}
      PORT: 8000
    ports:
      - '8000:8000'
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    networks:
      - social_media_network
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma generate && npm run prisma:seed && 
        node dist/src/main.js
      "

volumes:
  postgres_data:
    driver: local

networks:
  social_media_network:
    driver: bridge
